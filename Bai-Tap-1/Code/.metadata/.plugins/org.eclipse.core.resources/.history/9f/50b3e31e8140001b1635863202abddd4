package QuanLiNhanVien;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;


public class SoftwareHouse {
	private String theName;
	private List<Employee> listEmployee;

	public String getTheName() {
		return theName;
	}

	public void setTheName(String theName) {
		this.theName = theName;
	}

	public SoftwareHouse(String theName) {
		super();
		setTheName(theName);
		listEmployee = new ArrayList<Employee>();
	}

	@Override
	public String toString() {
		return "SoftwareHouse [theName=" + theName + "]";
	}

	// Thêm nhân viên
	public boolean addEmployee(Employee employee) {
		if (listEmployee.contains(employee))
			return false;
		else {
			listEmployee.add(employee);
			return true;
		}
	}

	// Tính tổng tiền phải trả cho nhân viên
	public double getMonthlySalaryBill() {
		int sum = 0;
		for (Employee employee : listEmployee) {
			sum += employee.getMonthlySalary();
		}
		
		return sum;
	}
	
	//
	public void sortAllStaffByName() {
		Collections.sort(listEmployee, new Comparator<Employee>() {

			@Override
			public int compare(Employee o1, Employee o2) {
				return o1.getTheName().compareToIgnoreCase(o2.getTheName());
			}
		});
	}
	
	//Lấy danh sách các lập trình viên
	public List<Employee> displayListProgrammers() {
		List<Employee> list = new ArrayList<Employee>();
		
		for (Employee employee : listEmployee) {
			if (employee instanceof Programmer) {
				list.add(employee);
			}
		}
		
		return list;
	}
	
	//Cập nhật phòng ban mới cho người quản lí
	public boolean updateDepartmentForAdmin(int aPayrollNo, String deptNew) {
		
		for (Employee employee : listEmployee) {
			if(employee instanceof Administrator)
				if(employee.getThePayrollNumber() == aPayrollNo)
				{
					((Administrator) employee).setTheDepartment(deptNew);
					return true;
				}
		}
		return false;
	}
	
	public boolean deleteEmployee(int id) {
		return listEmployee.removeIf(employee->employee.equals(id));
	}
}
